// <auto-generated />
using System;
using AtiFlight.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AtiFlight.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AtiFlight.Models.AirPlane", b =>
                {
                    b.Property<int>("AirPlaneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AirPlaneID"));

                    b.Property<int?>("FlightID")
                        .HasColumnType("integer");

                    b.HasKey("AirPlaneID");

                    b.ToTable("AirPlanes");
                });

            modelBuilder.Entity("AtiFlight.Models.Flight", b =>
                {
                    b.Property<int>("FlightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FlightID"));

                    b.Property<int>("AirPlaneID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FlyRouteID")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("FlightID");

                    b.HasIndex("AirPlaneID")
                        .IsUnique();

                    b.HasIndex("FlyRouteID");

                    b.HasIndex("UserId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AtiFlight.Models.FlyRoute", b =>
                {
                    b.Property<int>("FlyRouteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FlyRouteID"));

                    b.Property<int>("EndID")
                        .HasColumnType("integer");

                    b.Property<int>("StartID")
                        .HasColumnType("integer");

                    b.HasKey("FlyRouteID");

                    b.HasIndex("EndID");

                    b.HasIndex("StartID");

                    b.ToTable("FlyRoutes");
                });

            modelBuilder.Entity("AtiFlight.Models.Iller", b =>
                {
                    b.Property<int>("IlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IlId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IlId");

                    b.ToTable("Illers");
                });

            modelBuilder.Entity("AtiFlight.Models.Seat", b =>
                {
                    b.Property<int>("SeatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SeatID"));

                    b.Property<int>("AirPlaneID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFull")
                        .HasColumnType("boolean");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("SeatID");

                    b.HasIndex("AirPlaneID");

                    b.HasIndex("UserId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("AtiFlight.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AtiFlight.Models.Flight", b =>
                {
                    b.HasOne("AtiFlight.Models.AirPlane", "AirPlane")
                        .WithOne("Flight")
                        .HasForeignKey("AtiFlight.Models.Flight", "AirPlaneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtiFlight.Models.FlyRoute", "FlyRoute")
                        .WithMany("Flight")
                        .HasForeignKey("FlyRouteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtiFlight.Models.User", null)
                        .WithMany("Flight")
                        .HasForeignKey("UserId");

                    b.Navigation("AirPlane");

                    b.Navigation("FlyRoute");
                });

            modelBuilder.Entity("AtiFlight.Models.FlyRoute", b =>
                {
                    b.HasOne("AtiFlight.Models.Iller", "End")
                        .WithMany()
                        .HasForeignKey("EndID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtiFlight.Models.Iller", "Start")
                        .WithMany()
                        .HasForeignKey("StartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("End");

                    b.Navigation("Start");
                });

            modelBuilder.Entity("AtiFlight.Models.Seat", b =>
                {
                    b.HasOne("AtiFlight.Models.AirPlane", "AirPlane")
                        .WithMany("Seats")
                        .HasForeignKey("AirPlaneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtiFlight.Models.User", "User")
                        .WithMany("Seat")
                        .HasForeignKey("UserId");

                    b.Navigation("AirPlane");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AtiFlight.Models.AirPlane", b =>
                {
                    b.Navigation("Flight");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("AtiFlight.Models.FlyRoute", b =>
                {
                    b.Navigation("Flight");
                });

            modelBuilder.Entity("AtiFlight.Models.User", b =>
                {
                    b.Navigation("Flight");

                    b.Navigation("Seat");
                });
#pragma warning restore 612, 618
        }
    }
}
